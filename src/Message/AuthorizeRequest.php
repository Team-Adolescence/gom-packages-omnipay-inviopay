<?php

namespace Omnipay\InovioPay\Message;

/**
 * Class AuthorizeRequest
 *
 * @date      3/5/18
 * @author    markbonnievestil
 * @copyright Copyright (c) Infostream Group
 */
class AuthorizeRequest extends AbstractRequest
{
    /**
     * TODO : Support for multiple products. As of the moment, all payments are assumed to have one product id assigned to li_prod_id_1 param
     *
     * @return array
     * @throws \Omnipay\Common\Exception\InvalidRequestException
     */
    public function getData()
    {
        $data = parent::getData();

        $this->validate('amount', 'currency', 'productId');

        $data['request_action']   = 'CCAUTHORIZE';
        $data['li_prod_id_1']     = $this->getProductId();
        $data['li_value_1']       = $this->getAmount();
        $data['request_currency'] = strtolower($this->getCurrency());
        // identifier generated by the merchant website.
        $data['xtl_order_id'] = $this->getTransactionId();

        if ($this->getCardReference()) {
            $this->validate('customerReference');

            $data['pmt_id']  = $this->getCardReference();
            $data['cust_id'] = $this->getCustomerReference();
        } else {
            $this->validate('card');
            $card = $this->getCard();

            $data['cust_fname']        = $card->getFirstName();
            $data['cust_lname']        = $card->getLastName();
            $data['cust_email']        = $card->getEmail();
            $data['bill_addr']         = $card->getBillingAddress1() . ' ' . $card->getBillingAddress2();
            $data['bill_addr_city']    = $card->getBillingCity();
            $data['bill_addr_zip']     = $card->getBillingPostcode();
            $data['bill_addr_state']   = $card->getBillingState();
            $data['bill_addr_country'] = $card->getBillingCountry();
            $data['pmt_numb']          = $card->getNumber();
            $data['pmt_key']           = $card->getCvv();
            $data['pmt_expiry']        = $card->getExpiryDate('mY');
        }

        return $data;
    }

    /* TODO : Support multiple products
    public function getItems()
    {
        return $this->getParameter('items');
    }

    public function setItems($items)
    {
        if ($items && !$items instanceof ItemBag) {
            $items = new InovioPayItemBag($items);
        }

        return $this->setParameter('items', $items);
    }*/
}